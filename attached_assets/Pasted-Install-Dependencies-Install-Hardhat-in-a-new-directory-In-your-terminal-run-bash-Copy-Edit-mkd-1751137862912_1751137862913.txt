Install Dependencies
Install Hardhat in a new directory:

In your terminal, run:

bash
Copy
Edit
mkdir wallet-planner
cd wallet-planner
npm init -y
npm install --save-dev hardhat
Create Hardhat Project:

bash
Copy
Edit
npx hardhat
Follow the instructions to create a basic project. This will set up the necessary files for Hardhat.

Install OpenZeppelin Contracts (for ERC-20 token and security):

bash
Copy
Edit
npm install @openzeppelin/contracts
Install other dependencies like ethers.js for interacting with the Ethereum network:

bash
Copy
Edit
npm install @nomiclabs/hardhat-ethers ethers
Step 3: Write the Contract in Hardhat
Create a new file contracts/WalletPlanner.sol and paste your WalletPlanner.sol contract into this file.

The directory structure should look like this:

lua
Copy
Edit
/wallet-planner
├── contracts/
│   └── WalletPlanner.sol
├── scripts/
│   └── deploy.js
├── hardhat.config.js
└── package.json
Step 4: Configure Hardhat for Testnet Deployment
Open hardhat.config.js and modify it to configure your testnet. If you're using Sepolia, here’s an example configuration for Sepolia:

js
Copy
Edit
require("@nomiclabs/hardhat-ethers");
require("dotenv").config();

module.exports = {
  solidity: "0.8.21",
  networks: {
    sepolia: {
      url: `https://sepolia.infura.io/v3/${process.env.INFURA_PROJECT_ID}`,
      accounts: [`0x${process.env.PRIVATE_KEY}`]
    }
  }
};
Create a .env file in the root directory with your Infura Project ID and Private Key from your wallet (you can get this from MetaMask):

ini
Copy
Edit
INFURA_PROJECT_ID=your-infura-project-id
PRIVATE_KEY=your-wallet-private-key
Step 5: Write the Deployment Script
Create a scripts/deploy.js file to deploy your contract:

js
Copy
Edit
async function main() {
  const [deployer] = await ethers.getSigners();
  console.log("Deploying contracts with the account:", deployer.address);

  const WalletPlanner = await ethers.getContractFactory("WalletPlanner");
  const walletPlanner = await WalletPlanner.deploy();
  console.log("WalletPlanner contract deployed to:", walletPlanner.address);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
Step 6: Deploy to Testnet
Run Hardhat deployment on Sepolia (or your chosen testnet):

bash
Copy
Edit
npx hardhat run scripts/deploy.js --network sepolia
Once deployed, Hardhat will display the contract address on the testnet.

Step 7: Verify the Contract on Etherscan (Optional)
If you want to verify your contract on Etherscan (for Sepolia), you can use Hardhat Etherscan plugin:

Install the plugin:

bash
Copy
Edit
npm install --save-dev @nomiclabs/hardhat-etherscan
Add Etherscan API keys in .env:

ini
Copy
Edit
ETHERSCAN_API_KEY=your-etherscan-api-key
Add verification to your hardhat.config.js:

js
Copy
Edit
require("@nomiclabs/hardhat-etherscan");

module.exports = {
  etherscan: {
    apiKey: process.env.ETHERSCAN_API_KEY
  }
};
Verify the contract:

bash
Copy
Edit
npx hardhat verify --network sepolia <contract-address>